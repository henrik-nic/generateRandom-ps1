function Convert-SwedishCharacters {
    param (
        [string]$Text
    )
    return $Text -replace '[√•√§√Ö√Ñ]', 'a' -replace '[√∂√ñ]', 'o'
}

function Get-FakePerson {
    $faker = @{
        FirstName = @("Anna", "Erik", "Maria", "Lars", "Sara", "Johan", "Karin", "Oskar", "Emma", "Nils", "Elin", "Fredrik", "Linda", "Mikael", "Sofia", "Andreas", 
                      "Elisabeth", "Patrik", "Hanna", "Jonas", "Emil", "Julia", "David", "Ida", "Simon", "Malin", "Alexander", "Cecilia", "Daniel", "Frida", "Mathias", 
                      "Oscar", "Linnea", "Anton", "Rebecca", "Filip", "Tove", "Sebastian", "Johanna", "Victor", "Maja", "Sofie", "Axel", "Alva", "Benjamin", "Astrid", "Hugo",
                      "Elvira", "Leo", "Saga", "Wilma", "Noah", "Liv", "Elias", "Selma", "Viktor", "Albin", "Nora", "Max", "Tyra", "Isak", "Signe", "Ellen", "Hedda", "Liam", 
                      "Molly", "Theo", "Elsa", "Charlie", "Stella", "Arvid", "Tilda", "Gustav", "Filippa", "Alfred", "Mira", "Edvin", "Siri", "Leon", "Lina", "Sigge", "Elinor", 
                      "Wilhelm", "Nellie", "Ebba", "Olle", "Vera", "Hjalmar", "Rasmus", "Klara", "Algot", "Mina", "Sune", "Lova", "Alfons", "Sigurd", "Folke", "Hedvig", 
                      "Edgar", "Sigvard", "Rune", "H√•kan", "Bengt", "Gunnar", "Stig", "Kjell", "Rolf", "Ulf", "Bo", "√Öke", "Sven", "G√∂sta", "Folke", "Nils-Erik", "Jan-Olof", "Per-Ola", "Lennart")
        LastName  = @("Svensson", "Johansson", "Karlsson", "Nilsson", "Andersson", "Larsson", "Olsson", "Persson", "Eriksson", "Pettersson", "Jansson", "Bergstr√∂m", 
                      "Lindqvist", "Gustafsson", "Lundqvist", "Nystr√∂m", "Str√∂mberg", "Sandberg", "Axelsson", "Berglund", "Hansson", "S√∂derberg", "Lindstr√∂m", "Johansdotter", 
                      "Karlsson", "Nilsson", "Andersdotter", "Larssondotter", "Olssondotter", "Perssondotter", "Erikssondotter", "Petterssondotter", "Jansdotter", 
                      "Bergstr√∂mdotter", "Lindqvistdotter", "Gustafssondotter", "Lundqvistdotter", "Sandbergdotter", "Johanssonsson", "Karlssons", "Nilssons", "Anderssson",
                      "Larssons", "Olssons", "Perssons", "Erikssons", "Petterssons", "Janssons", "Bergstr√∂ms", "Lindqvists", "Gustafssons", "Lundqvists",
                      "Nystr√∂ms", "Str√∂mbergs", "Sandbergs", "Axelssons", "Berglunds", "Hanssons", "S√∂derbergs", "Lindstr√∂ms", "Johansdotters")

        City      = @("Stockholm", "G√∂teborg", "Malm√∂", "Uppsala", "√ñrebro", "Lund", "Link√∂ping", "Helsingborg", "J√∂nk√∂ping", "Ume√•", "G√§vle", "Bor√•s", "Karlstad",
                      "V√§ster√•s", "Sundsvall", "Norrk√∂ping", "Halmstad", "Eskilstuna", "Lule√•", "Trollh√§ttan", "Kalmar", "Karlskrona", "Kristianstad", "Sk√∂vde",
                      "Falun", "√ñstersund", "Visby", "V√§xj√∂", "Borl√§nge", "Alings√•s", "M√∂lndal", "Kungsbacka", "Varberg", "Liding√∂", "T√§by", "Sollentuna",
                      "Sigtuna", "Upplands V√§sby", "Nacka", "V√§rmd√∂", "Botkyrka", "Huddinge", "Haninge", "Sundbyberg", "Solna", "Danderyd", "Nyn√§shamn", "Vallentuna", "√ñster√•ker",
                      "Tyres√∂", "T√§by", "V√§rmd√∂", "Sigtuna", "Upplands V√§sby", "Nacka", "Botkyrka", "Huddinge", "Haninge", "Sundbyberg", "Solna", "Danderyd", "Nyn√§shamn", "Vallentuna", "√ñster√•ker",
                      "Tyres√∂", "Sigtuna", "Upplands")

        Street    = @("Storgatan", "Kungsgatan", "V√§stra v√§gen", "√ñstra v√§gen", "Bergsgatan", "Skolgatan", "Hamngatan", "Kyrkogatan", "Stationsgatan", "S√∂dra v√§gen",
                      "Norra v√§gen", "Torggatan", "Parkgatan", "Industrigatan", "Fabriksgatan", "Skogsv√§gen", "√Ñngsgatan", "Hagagatan", "Lillgatan", "Stenv√§gen", "Granv√§gen",
                      "Tallgatan", "Bj√∂rnv√§gen", "R√∂nnv√§gen", "Ekv√§gen", "Aspv√§gen", "Bj√∂rkgatan", "Kastanjegatan", "Almgatan", "Lindgatan", "Cederv√§gen", "Plommonv√§gen", "√Ñppelv√§gen",
                      "P√§rongatan", "Vinb√§rsgatan", "Hallongatan", "Bl√•b√§rsgatan", "Lingongatan", "Smultrongatan", "Krusb√§rsgatan", "Havregatan", "Vetev√§gen", "R√•gv√§gen", "Kornv√§gen", "Havrev√§gen")
    }

    $first = Get-Random $faker.FirstName
    $last  = Get-Random $faker.LastName

    $firstEmail = Convert-SwedishCharacters $first
    $lastEmail  = Convert-SwedishCharacters $last

    $ssn = -join (
        (Get-Random -Minimum 1960 -Maximum 2000).ToString(),
        (Get-Random -Minimum 1 -Maximum 12).ToString("00"),
        (Get-Random -Minimum 1 -Maximum 28).ToString("00"), "-",
        (Get-Random -Minimum 1000 -Maximum 9999)
    )

    $ip = -join (
        (Get-Random -Minimum 1 -Maximum 255), ".",
        (Get-Random -Minimum 0 -Maximum 255), ".",
        (Get-Random -Minimum 0 -Maximum 255), ".",
        (Get-Random -Minimum 1 -Maximum 255)
    )

    $iban = "SE" + (Get-Random -Minimum 10 -Maximum 99).ToString() + " " +
            ((1..5) | ForEach-Object { (Get-Random -Minimum 1000 -Maximum 9999).ToString() }) -join " "

    $serviceId = Get-Random -Minimum 1000 -Maximum 9999

    $streetName     = Get-Random $faker.Street
    $streetNumber   = Get-Random -Minimum 1 -Maximum 99
    $city           = Get-Random $faker.City
    $randomMail     = -join ((48..57) + (97..122) | Get-Random -Count 5 | ForEach-Object { [char]$_ })

    return [PSCustomObject]@{
        GUID         = [guid]::NewGuid().ToString()
        Namn         = "$first $last"
        StreetName   = $streetName
        StreetNumber = $streetNumber
        Stad         = $city
        Postnummer   = (Get-Random -Minimum 10000 -Maximum 99999).ToString()
        SSN          = $ssn
        Telefon      = "07$(Get-Random -Minimum 0 -Maximum 9)$(Get-Random -Minimum 1000000 -Maximum 9999999)"
        Mail         = ("$firstEmail.$lastEmail@$randomMail.example.com").ToLower()
        IP           = $ip
        IBAN         = $iban
        ServiceID    = $serviceId
    }
}

function Export-PersonData {
    param (
        [array]$People,
        [string]$OutputPath
    )

    $base = [System.IO.Path]::GetFileNameWithoutExtension($OutputPath)

    $People | Export-Csv "$base.csv" -NoTypeInformation -Encoding UTF8
    $People | ConvertTo-Json | Out-File "$base.json" -Encoding UTF8

    Write-Host "‚úÖ Exported CSV and JSON to $base.*"
}

# ----------- MAIN -----------

$fakeData = @()
1..5431 | ForEach-Object { $fakeData += Get-FakePerson }

$outputBase = "C:\Users\HenrikJansson\C Nord-ic nic-demo.com\FakeData.csv"
Export-PersonData -People $fakeData -OutputPath $outputBase

# Optional: Remove or define Export-PDF if needed
# Export-PDF -People $fakeData -OutputPath $outputBase

Write-Host "`nüéâ All exports completed to $outputBase.*"
