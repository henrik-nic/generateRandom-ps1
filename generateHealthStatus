# Step 1: Load your FakeData CSV
$csvPath = "\path\to\your\customers.csv"  # Update with your actual CSV path
$employees = Import-Csv -Path $csvPath -Encoding UTF8 #| Select-Object -First 3

# Output folder
$outputFolder = "\path\to\your\output\health_status"  # Update with your actual output folder path
New-Item -ItemType Directory -Path $outputFolder -Force | Out-Null


# Step 2: Define a function to hash SSN
#function Get-HashedSSN {
#    param (
#        [string]$ssn
#    )
#
#    $bytes = [System.Text.Encoding]::UTF8.GetBytes($ssn)
#    $sha256 = [System.Security.Cryptography.SHA256]::Create()
#    $hashBytes = $sha256.ComputeHash($bytes)
#    return [BitConverter]::ToString($hashBytes) -replace '-', ''
#}




# Step 2: Define random health status function
function Get-RandomHealthStatus {
    $options = @(
        "Frisk", "Frisk", "Frisk", "Frisk",  # 4x higher chance of healthy
        "ADHD",
        "PTSD",
        "Diabetes",
        "Astma",
        "Depression",
        "Bipolär sjukdom",
        "ADHD, PTSD",
        "Diabetes, Astma",
        "PTSD, Depression"
    )

    return Get-Random -InputObject $options
}

# Step 3: Create individual health status files
foreach ($emp in $employees) {
    $healthStatus = Get-RandomHealthStatus

    $record = [PSCustomObject]@{
        Namn           = $emp.Namn
        #Personnummer   = Get-HashedSSN -ssn $emp.SSN
        Personnummer   = $emp.SSN
        Telefon        = $emp.Telefon
        Mail           = $emp.Mail
        Hälsotillstånd = $healthStatus
    }

    # Clean filename
    $safeName = ($emp.Namn -replace '[\\\/:\*\?"<>\|]', '') -replace '\s+', '_'
    $fileName = "Hälsotillstånd_$safeName.csv"
    $filePath = Join-Path $outputFolder $fileName

    # Save individual file
    $record | Export-Csv -Path $filePath -Encoding UTF8 -NoTypeInformation

    Write-Host "✅ Skapade hälsotillstånd-fil för: $($emp.Namn)"
}

Write-Host "`n✅ Alla personliga hälsotillstånd-filer sparade i: $outputFolder"
